<<<<<<< HEAD
#ifndef POSITIONING_MANAGER_H
#define POSITIONING_MANAGER_H

#include <string>
#include <utility> // –î–ª—è std::pair

class PositioningManager {
public:
    PositioningManager();                                // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    ~PositioningManager();                               // –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä

    void initializeSystem();                             // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    std::pair<double, double> getCurrentPosition();      // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –ø–æ–∑–∏—Ü–∏–∏ (—à–∏—Ä–æ—Ç–∞, –¥–æ–ª–≥–æ—Ç–∞)
    bool setTargetPosition(double latitude, double longitude); // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–µ–ª–µ–≤–æ–π –ø–æ–∑–∏—Ü–∏–∏
    void updatePosition();                               // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –¥—Ä–æ–Ω–∞
    double calculateDistanceToTarget();                 // –†–∞—Å—á—ë—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –¥–æ —Ü–µ–ª–∏

private:
    double currentLatitude;                              // –¢–µ–∫—É—â–∞—è —à–∏—Ä–æ—Ç–∞
    double currentLongitude;                             // –¢–µ–∫—É—â–∞—è –¥–æ–ª–≥–æ—Ç–∞
    double targetLatitude;                               // –¶–µ–ª–µ–≤–∞—è —à–∏—Ä–æ—Ç–∞
    double targetLongitude;                              // –¶–µ–ª–µ–≤–∞—è –¥–æ–ª–≥–æ—Ç–∞
    double calculateDistance(double lat1, double lon1, double lat2, double lon2); // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
};

#endif // POSITIONING_MANAGER_H
=======
#pragma once
#ifndef POSITIONING_MANAGER_H
#define POSITIONING_MANAGER_H

class PositioningManager {
public:
    // ”Ô‡‚ÎÂÌËÂ ÔÓÁËˆËÓÌËÓ‚‡ÌËÂÏ ‰ÓÌ‡
    void managePosition();

    // Õ‡‚Ë„‡ˆËˇ Ò ËÒÔÓÎ¸ÁÓ‚‡ÌËÂÏ QR-ÍÓ‰Ó‚
    void qrNavigation();
};

#endif
>>>>>>> a219246406ed763c4bc64259160dfa1b095d3212
