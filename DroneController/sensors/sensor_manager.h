<<<<<<< HEAD
#ifndef SENSOR_MANAGER_H
#define SENSOR_MANAGER_H

#include <string>
#include <vector>

enum class SensorType {
    TEMPERATURE,      // –î–∞—Ç—á–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
    HUMIDITY,         // –î–∞—Ç—á–∏–∫ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏
    PRESSURE,         // –î–∞—Ç—á–∏–∫ –¥–∞–≤–ª–µ–Ω–∏—è
    BATTERY_LEVEL     // –î–∞—Ç—á–∏–∫ —É—Ä–æ–≤–Ω—è –∑–∞—Ä—è–¥–∞ –±–∞—Ç–∞—Ä–µ–∏
};

struct SensorData {
    SensorType type;     // –¢–∏–ø –¥–∞—Ç—á–∏–∫–∞
    double value;        // –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–∞—Ç—á–∏–∫–∞
};

class SensorManager {
public:
    SensorManager();                            // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    ~SensorManager();                           // –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä

    void initializeSensors();                   // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –¥–∞—Ç—á–∏–∫–æ–≤
    SensorData readSensor(SensorType type);     // –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å –æ–¥–Ω–æ–≥–æ –¥–∞—Ç—á–∏–∫–∞
    std::vector<SensorData> readAllSensors();   // –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–æ –≤—Å–µ—Ö –¥–∞—Ç—á–∏–∫–æ–≤
    bool calibrateSensor(SensorType type);      // –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –¥–∞—Ç—á–∏–∫–∞

private:
    std::vector<SensorData> sensorDataCache;    // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–∞—Ç—á–∏–∫–æ–≤
    double fetchSensorData(SensorType type);    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
};

#endif // SENSOR_MANAGER_H
=======
#pragma once
#ifndef SENSOR_MANAGER_H
#define SENSOR_MANAGER_H

class SensorManager {
public:
    // »ÌËˆË‡ÎËÁ‡ˆËˇ ‚ÒÂı ‰‡Ú˜ËÍÓ‚
    void initializeSensors();

    // ◊ÚÂÌËÂ ‰‡ÌÌ˚ı Ò ‰‡Ú˜ËÍÓ‚
    void readSensorData();
};

#endif
>>>>>>> a219246406ed763c4bc64259160dfa1b095d3212
