<<<<<<< HEAD
=======
#pragma once
>>>>>>> a219246406ed763c4bc64259160dfa1b095d3212
#ifndef CONFIG_LOADER_H
#define CONFIG_LOADER_H

#include <string>
<<<<<<< HEAD
#include <map>

class ConfigLoader {
public:
    ConfigLoader();                             // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    ~ConfigLoader();                            // –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä

    void loadConfig(const std::string& filepath); // –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ —Ñ–∞–π–ª–∞
    std::string getValue(const std::string& key); // –ü–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∫–ª—é—á—É

private:
    std::map<std::string, std::string> configData; // –•—Ä–∞–Ω–∏–ª–∏—â–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    void parseConfigLine(const std::string& line); // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑–±–æ—Ä–∞ —Å—Ç—Ä–æ–∫–∏
};

#endif // CONFIG_LOADER_H
=======

class ConfigLoader {
public:
    // «‡„ÛÁÍ‡ ÍÓÌÙË„Û‡ˆËË ËÁ Ù‡ÈÎ‡
    void loadConfig(const std::string& filepath);
};

#endif
>>>>>>> a219246406ed763c4bc64259160dfa1b095d3212
