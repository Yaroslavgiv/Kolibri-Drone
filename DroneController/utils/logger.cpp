#include "logger.h"
#include <iostream>
#include <fstream>
<<<<<<< HEAD
#include <ctime>

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
std::string getCurrentTime() {
    std::time_t now = std::time(nullptr);
    char buffer[20];
    std::strftime(buffer, sizeof(buffer), "%Y-%m-%d %H:%M:%S", std::localtime(&now));
    return std::string(buffer);
}

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
void Logger::logInfo(const std::string& message) {
    std::cout << "[INFO] " << getCurrentTime() << ": " << message << std::endl;

    std::ofstream logFile("log.txt", std::ios::app);
    if (logFile.is_open()) {
        logFile << "[INFO] " << getCurrentTime() << ": " << message << std::endl;
=======

// ÃÂÚÓ‰ Á‡ÔËÒË ËÌÙÓÏ‡ˆËÓÌÌÓ„Ó ÒÓÓ·˘ÂÌËˇ
void Logger::logInfo(const std::string& message) {
    std::cout << "[INFO]: " << message << std::endl;

    std::ofstream logFile("log.txt", std::ios::app);
    if (logFile.is_open()) {
        logFile << "[INFO]: " << message << std::endl;
>>>>>>> a219246406ed763c4bc64259160dfa1b095d3212
        logFile.close();
    }
}

<<<<<<< HEAD
// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
void Logger::logWarning(const std::string& message) {
    std::cout << "[WARNING] " << getCurrentTime() << ": " << message << std::endl;

    std::ofstream logFile("log.txt", std::ios::app);
    if (logFile.is_open()) {
        logFile << "[WARNING] " << getCurrentTime() << ": " << message << std::endl;
        logFile.close();
    }
}

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
void Logger::logError(const std::string& message) {
    std::cerr << "[ERROR] " << getCurrentTime() << ": " << message << std::endl;

    std::ofstream logFile("log.txt", std::ios::app);
    if (logFile.is_open()) {
        logFile << "[ERROR] " << getCurrentTime() << ": " << message << std::endl;
=======
// ÃÂÚÓ‰ Á‡ÔËÒË ÔÂ‰ÛÔÂÊ‰ÂÌËˇ
void Logger::logWarning(const std::string& message) {
    std::cout << "[WARNING]: " << message << std::endl;

    std::ofstream logFile("log.txt", std::ios::app);
    if (logFile.is_open()) {
        logFile << "[WARNING]: " << message << std::endl;
>>>>>>> a219246406ed763c4bc64259160dfa1b095d3212
        logFile.close();
    }
}
